// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow to update task statuses based on natural language input.
 *
 * - updateTaskStatusViaNLP - A function that updates the status of a task using natural language processing.
 * - UpdateTaskStatusInput - The input type for the updateTaskStatusViaNLP function, including task ID and NLP status update.
 * - UpdateTaskStatusOutput - The return type for the updateTaskStatusViaNLP function, returning the updated task status.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const UpdateTaskStatusInputSchema = z.object({
  taskId: z.string().describe('The ID of the task to update.'),
  statusUpdateNLP: z.string().describe('Natural language input describing the desired status update (e.g., \'Mark as done\', \'Reschedule to next week\').'),
});
export type UpdateTaskStatusInput = z.infer<typeof UpdateTaskStatusInputSchema>;

const UpdateTaskStatusOutputSchema = z.object({
  updatedStatus: z.string().describe('The updated status of the task (e.g., \'DONE\', \'IN_PROGRESS\', \'SCHEDULED\').'),
});
export type UpdateTaskStatusOutput = z.infer<typeof UpdateTaskStatusOutputSchema>;

export async function updateTaskStatusViaNLP(input: UpdateTaskStatusInput): Promise<UpdateTaskStatusOutput> {
  return updateTaskStatusFlow(input);
}

const updateTaskStatusPrompt = ai.definePrompt({
  name: 'updateTaskStatusPrompt',
  input: {schema: UpdateTaskStatusInputSchema},
  output: {schema: UpdateTaskStatusOutputSchema},
  prompt: `You are an AI assistant tasked with updating the status of tasks based on natural language input.

You will receive a task ID and a natural language description of the desired status update. Your job is to interpret the natural language and determine the appropriate new status for the task.

Possible task statuses are: PENDING, IN_PROGRESS, SCHEDULED, DONE, BLOCKED.

Task ID: {{{taskId}}}
Status Update Request: {{{statusUpdateNLP}}}

Based on the above information, determine the most appropriate updated status for the task. Respond ONLY with the status, nothing else.
`,,
});

const updateTaskStatusFlow = ai.defineFlow(
  {
    name: 'updateTaskStatusFlow',
    inputSchema: UpdateTaskStatusInputSchema,
    outputSchema: UpdateTaskStatusOutputSchema,
  },
  async input => {
    const {output} = await updateTaskStatusPrompt(input);
    return {updatedStatus: output!.updatedStatus};
  }
);

